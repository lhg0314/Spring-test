
 +@AutoWired바인딩 전략

 -바인딩:실행 코드와 정의코드가 연결되는 것
 -주로 메소드 호출코드와 메소드 정의코드가 연결되는 것을 의미한다

 -@Autowired는 객체변수와 스프링 빈을 연결하는 것을 뜻한다(DI)

 1.byType
	스프링 빈의 이름(id)에 상관없이 같은 타입의 bean이 한개만 존재한다면 바인딩

	같은 타입으로 등록된 빈이 2개 이상이면 예외발생
	(NoUniqueBeanDefinitionException)

 2.byName
	같은 타입의 빈이 여러개 등록되어있더라도 지정된 이름의 빈을 바인딩

	이름이 지정되지 않았다면 스프링 빈의 id와 멤버필드의 이름을 비교해서 바인딩

 ** 같은 이름으로 여러개의 스프링 빈이 등록되어있을 경우는 고려하지 않아도 된다
	->XML파일의 id는 중복될 수 없다

 +DI 어노테이션

 1.@Autowired
	패키지 : org.springframework.beans.factory.annotaion.Autowired
	스프링에서 제공하는 DI 어노테이션
	적용가능 위치: 멤버필드,생성자,파라미터가 존재하는 메소드

	DI 전략 : byType먼저,byName 다음
	

 2.@Resource
	패키지: javax.annotation.Resource

	자바표준으로 제공되는 DI어노테이션

	적용가능 위치 : 멤버필드, 파라미터가 한개인 setter

	DI전략: byName 먼저,byType다음

 3.@Inject
	패키지 : javax.inject.Inject

	자바 표준으로 제공되는 DI어노테이션
	@Autowired와 동일한 기능을 제공한다

	스프링 3.0이상버전이상부터 사용가능

	javax.inject-X.jar 라이브러리가 필요하다
	
	@Resouce 강화버전

 ** @Qualifier("beanName")

	DI어노테이션의 보조기능
	바이딩될 스프링빈의 이름을 직접 지정할 수 있게 해주는 어노테이션

 +스프링에 마이바티스 설치하기
 -메이븐 툴을 이용하여 라이브러리를 설치한다

 +필요 라이브러리
 -mybatis-spring
	스프링에서 마이바티스 사용할 수 있도록 해주는 라이브러리
 -mybatis
 -spring-jdbc
	스프링에서 JDBC를 사용할 수 있게 해주는 라이브러리
 -ojdbc
	자바 프로그램이 오라클 DB에 연동할수 있게 해주는 라이브러리








	